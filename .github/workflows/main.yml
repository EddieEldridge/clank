# This is a basic workflow to help you get started with Actions

name: Clank EC2 Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # SSH onto the EC2 instance and run the following commands
      # 1. Checkout the latest version of the project
      # 2. Install the dependencies
      # 3. Restart the application
      # - name: Deploy in EC2
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOSTNAME }}
      #     username: ${{ secrets.USER }}
      #     key: ${{ secrets.EC2_PRIVATE_KEY }}
      #     script: |
      #         cd /home/ubuntu/projects/clank
      #         npm ci

      #         git checkout master &&
      #         git fetch --all &&
      #         git reset --hard origin/master &&
      #         git pull origin master &&
      #         pm2 restart clank-bot

      - name: ls -a via ssh
        uses: fifsky/ssh-action@master
        with:
          # command: |
          #   cd /home/ubuntu/projects/clank
          #   npm ci
          #   whoami
          #   ls -l

          #   git checkout master &&
          #   git fetch --all &&
          #   git reset --hard origin/master &&
          #   git pull origin master &&
          #   pm2 restart clank-bot
          command: |
            ls -l
            whoami

          host: ${{ secrets.HOSTNAME }}
          user: ${{ secrets.USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
